
注释：有些细节，我们在用的时候会不注意，下面列举一些。

注意：转载需加 wangfeng little创建

我们知道分号表示一条语句的结尾。但是，有一些语法结构不需要在语句的结尾添加分号，主要是以下三种情况。

1：（1）for和while循环

for(;;){} // 没有分号

while(true){} // 没有分号

需要注意的是do...while循环是有分号的。

do {
    a--;
} while(a > 0); // 分号不能省略


（2）分支语句：if， switch， try

if (true) {} // 没有分号

switch () {} // 没有分号

try {} catch {} // 没有分号

（3）函数的声明语句

function f() {} // 没有分号

但是函数表达式仍然要使用分号。

var f = function f() {};

以上三种情况，如果使用了分号，并不会出错。因为，解释引擎会把这个分号解释为空语句。

2.toString会将注释一起打印出来

var w = (function(){
  /*
  *line1
  *line2
  */
  }).toString().split('\n').slice(1,-1).join('\n');
  console.log(w);
  
  你如果觉得输出为空就错了。最后结果是里面的注释：
  /*
  *line1
  *line2
  */
  
3.字符集

var s = "\uD834\uDF06"

s // "𝌆"
s.length // 2
/^.$/.test(s) // false
s.charAt(0) // ""
s.charAt(1) // ""
s.charCodeAt(0) // 55348
s.charCodeAt(1) // 57094

上面代码说明，对于于U+10000到U+10FFFF之间的字符，JavaScript总是视为两个字符（字符的length属性为2），用来匹配单个字符的正则表
达式会失败（JavaScript认为这里不止一个字符），charAt方法无法返回单个字符，charCodeAt方法返回每个字节对应的十进制值。
