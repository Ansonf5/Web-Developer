
说明：常用正则表达式

验证数字的正则表达式集 
验证数字：^[0-9]*$
验证n位的数字：^\d{n}$
验证至少n位数字：^\d{n,}$
验证m-n位的数字：^\d{m,n}$
验证零和非零开头的数字：^(0|[1-9][0-9]*)$
验证有两位小数的正实数：^[0-9]+(.[0-9]{2})?$
最多两位小数的正实数：^[0-9]+(.[0-9]{0,2})?$
验证有1-3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$
验证非零的正整数：^\+?[1-9][0-9]*$
验证非零的负整数：^\-[1-9][0-9]*$
验证非负整数（正整数 + 0）  ^\d+$
验证非正整数（负整数 + 0）  ^((-\d+)|(0+))$
验证长度为3的字符：^.{3}$
验证由26个英文字母组成的字符串：^[A-Za-z]+$
验证由26个大写英文字母组成的字符串：^[A-Z]+$
验证由26个小写英文字母组成的字符串：^[a-z]+$
验证由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$
验证由数字、26个英文字母或者下划线组成的字符串：^\w+$
验证用户密码:^[a-zA-Z]\w{5,17}$ 正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。
验证是否含有 ^%&',;=?$\" 等字符：[^%&',;=?$\x22]+
验证汉字：^[\u4e00-\u9fa5],{0,}$
验证Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
验证InternetURL：^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$ ；^[a-zA-z]+://(w+(-w+)*)(.(w+(-w+)*))*(?S*)?$
验证电话号码：^(\(\d{3,4}\)|\d{3,4}-)?\d{7,8}$：--
正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。
验证身份证号（15位或18位数字）：^\d{15}|\d{}18$
验证一年的12个月：^(0?[1-9]|1[0-2])$ 正确格式为：“01”-“09”和“1”“12”
验证一个月的31天：^((0?[1-9])|((1|2)[0-9])|30|31)$    正确格式为：01、09和1、31。
整数：^-?\d+$
非负浮点数（正浮点数 + 0）：^\d+(\.\d+)?$
正浮点数   ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$
非正浮点数（负浮点数 + 0） ^((-\d+(\.\d+)?)|(0+(\.0+)?))$
负浮点数  ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$
浮点数  ^(-?\d+)(\.\d+)?
数字分割：(\d)(?=(\d\d\d)+(?!\d)) 例如：12000.00分割为12,000.00 

正则的基础组成：

1.“[ ]”表示字符类： 即括号里是个字符集：如/[abc]/,表示和含有a,b,c任何一个字母的字符串都匹配。

注：特殊字符类：
\s表示空格符、制表符、Unicode空白符。
\S表示非Unicode空白符。(也可自定义Unicode字符类：如：/[\u4E00-\u9FA5]/表示只匹配中文字符。)
\w 任何单字字符，相当于[a-zA-X0-9_]；\W与\w相反。
\d 任何数字，相当于[0-9]；\D与\w相反。
\b在字符类中使用表示退格符。[\b]则表示退格直接量。\b可以用来指定匹配位置，也可称为锚；如： 查找一个句子里的单词 little , 可以
使用/\blittle\b/；\B与其相反。

2.“-"表示连字符，如[a-z]。

3."."表示通配符，除换行符和其他Unicode行终止符之外的任意字符。

4."^"具有两重含义：开始标记和非，如：/^abc/表示以abc开始的字符，当在[]中时：/[^abc]/表示非abc的所有字符。

5."$"表示字符结尾。如：/^abc$/表示以abc开始的字符且以c结束的字符。

6.”{}"表示重复上一项。如/\d{2,4}/表示数字出现两次，最多出现4次。如/3{2,4}/匹配33...；333....；3333.....;不匹配3和4个3相连以
上的了。它的三种格式如下{n,m}表示至少n次，最多m次；{n,}至少n次；{n}恰好n次。

7."?"表示{0,1}。

8."+"表示{1,}。

9."*"表示{0,}。

注意：非贪婪的重复（如??,+?,*?,{1,5}?只匹配第一个。）

10."|"表示分割，即或的含义。如：/ab|cd|ef/匹配含有ab或cd或ef的字符串。

11."()"包含三重用途：一是定义子表达式。二是在完整的模式中定义子模式。三是子表达式的引用。

子模式的定义可以从目标串中抽取和括号中的子模式相匹配的部分。
子模式的表达式的引用是指：可识别子模式的编号，提取它。如/(abc)\sis\s(string\w*)/；里面含有两个字表达式：可通过
\1指(abc)；\2指(string\w*)；这个是为了匹配abc is string加*，里面\s是空格的意思；
举例应用如：/['"][^'"]*['"]/ 我们不能取前后同样的引号，可以这样写：/[('")[^'"]*\1]/，可起到约束作用。
注意：若想()里的不想被记忆，可采用(?:.....)，将不会对其编号。
括号 "( )" 内的子表达式，如果希望匹配结果不进行记录供以后使用，可以使用 "(?:xxxxx)" 格式
举例：表达式 "(?:(/w)/1)+" 匹配 "a bbccdd efg" 时，结果是 "bbccdd"。括号 "(?:)" 范围的匹配结果不进行记录
因此 "(/w)" 使用 "/1" 来引用。
需要注意还有条件判断(?=p)，(?!p)如下：
例如：/(javascript)?(?=\:)/ 表示匹配javascript:，但不包含:，因为他有个条件就是后要接:，它不匹配javascript，
(?!p)反前向声明，要求接下来的字符不与模式p匹配，与(?=p)相反。
